## Houses settings for Cgroup_py
## Commented settings will be set to defaults automagically.

[main]

## Sets the name for the system to be used in notifications. E.g system_name = Big Red II
# sysyem_name = My System

## Sets the minimum UID to watch for.
## Useful for ignoring system users when throttling
minUID = 1000

## Sets the interval at which our daemon will look through
## processes and recalculate limits
## Note, this can be expensive due to time spent looping in proc.
## In testing, a value in the 3-5 second range is fine on a system
## with a couple dozen users
interval = 5

## Sets the maximum allowable percentage of CPU usage.
## This is applicable to all users as a whole (e.g. the  total usage
## of all persons on the system will not exceed this percentage.)
## Value is expressed as an int between 1-100
cpu_pct_max = 90

## Sets the memory limit for each user's cgroup.
## Value expressed in GIGS
cgroup_memoryLimit_gigs = 2

## Sets the amount of CPU usage at which a user is considered active.
## "Inactive" users are not considered when calculating the per-user
## CPU throttling cap. 
activityThreshold = 10

## The following values are used by the monitoring programs to set
## upper and lower bounds for whether a user should be considered
## under throttling. This is a workaround due to incredible flappiness
## in trying to directly use #cgroup/cpu/cpu.stat's throttling data
## Jerry-rigged hysteresis at its finest.
upper_ThrottleThresh = 95
lower_ThrottleThresh = 80

## Whether we should give users a visual nag when they are approaching
## memory limits
shouldMemoryNag = True

## Ditto CPU limits
shouldCPUNag = False

## Nag warning ratelimit
## how long we should enforce silence between notifications
## to users.
nag_ratelimit = 1440

## Email to send to for admin notifications
admin_email = root@localhost

## Email shown on received emails
sending_email = cgroups@localhost

## Email domain for users (script grabs username and attaches this domain. Use localhost for local delivery)
user_email_domain = localhost

## Log to push throttle events to for later tracking
throttle_log = /tmp/cgroup_py/throttle.log;

## Force legacy operations for task moving and setting limits
## This works around problems in SystemD itself if there are
## issues with cgroups not being appropriately limited
forceLegacy = False